# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
variables:
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk >=3.x'
  inputs:
    packageType: sdk
    version: 3.x
- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: build
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/out'
- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: 'test/**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --logger trx'
- task: PublishBuildArtifacts@1
  displayName: 'Publish out/ Artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/out'
    ArtifactName: 'out-$(buildConfiguration)'
- task: DotNetCoreCLI@2
  displayName: Pack
  inputs:
    command: pack
    includesource: true
    includesymbols: true
    nobuild: true
    projects: 'src/**/*.csproj'
    packDirectory: '$(Build.ArtifactStagingDirectory)/pkg'
- task: PublishBuildArtifacts@1
  displayName: 'Publish pkg/ Artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/pkg'
    ArtifactName: 'pkg-$(buildConfiguration)'